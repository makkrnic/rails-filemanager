.row
  .col-xs-12
    .file-manager
      =form_for RailsFilemanager::FilemanagerFile.new, url: filemanager_files_path, html: { multipart: true, id: 'fileupload' } do |f|
        =f.hidden_field :parent_id, value: '', id: 'parent_id_input'
        .row.fileupload-buttonbar
          .col-xs-12
            %span.btn.btn-success.fileinput-button
              %span.glyphicon.glyphicon-plus=''
              %span Add files
              =f.file_field :file

            =button_tag class: 'btn btn-primary new-directory' do
              %span.glyphicon.glyphicon-folder-close=''
              %span New directory

        .row
          .col-xs-12
            .fileupload-loading
              &nbsp;
        .row
          .col-xs-12
            /%table.table.table-striped
            /  %tbody.files=''
            .jumbotron
              .row
                .col-xs-12
                  %span.glyphicon.glyphicon-arrow-up.clickable#up-dir=''
              .row
                .col-xs-12
                  %h3.cwd-name
              .row
                .col-xs-12
                  .files{ 'data-cwd-id' => '0' }

:javascript
  var fileUploadErrors = {
    maxFileSize: 'File is too big',
    minFileSize: 'File is too small',
    acceptFileTypes: 'Filetype not allowed',
    maxNumberOfFiles: 'Max number of files exceeded',
    uploadedBytes: 'Uploaded bytes exceed file size',
    emptyResult: 'Empty file upload result',
  }

-# :plain
-#
-#   <!-- The template to display files available for upload -->
-#   <script id="template-upload" type="text/x-tmpl">
-#     {% for (var i=0, file; file=o.files[i]; i++) { %}
-#     <div class="template-upload fade">
-#       <div class="preview"><span class="fade"></span></div>
-#       <div class="name"><span>{%=file.name%}</span></div>
-#       <div class="size"><span>{%=o.formatFileSize(file.size)%}</span></div>
-#       {% if (file.error) { %}
-#       <div class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</div>
-#       {% } else if (o.files.valid && !i) { %}
-#       <div>
-#         <div class="progress progress-success progress-striped active"><div class="bar" style="width:0%;"></div></div>
-#       </div>
-#       <div class="start">{% if (!o.options.autoUpload) { %}
-#         <button class="btn btn-primary">
-#           <i class="icon-upload icon-white"></i>
-#           <span>{%=locale.fileupload.start%}</span>
-#         </button>
-#         {% } %}</div>
-#       {% } else { %}
-#       <div></div>
-#       {% } %}
-#       <div class="cancel">{% if (!i) { %}
-#         <button class="btn btn-warning">
-#           <i class="glyphicon glyphicon-ban-circle"></i>
-#           <span>{%=locale.fileupload.cancel%}</span>
-#         </button>
-#         {% } %}</div>
-#     </div>
-#     {% } %}
-#   </script>
-#
-#   <!-- The template to display files available for download -->
-#   <script id="template-download" type="text/x-tmpl">
-#     {% for (var i=0, file; file=o.files[i]; i++) { %}
-#       <tr class="template-download fade">
-#         {% if (file.error) { %}
-#           <td></td>
-#           <td class="name"><span>{%=file.name%}</span></td>
-#           <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
-#           <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
-#           {% } else { %}
-#           <td class="preview">{% if (file.thumbnail_url) { %}
-#             <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
-#             {% } %}</td>
-#           <td class="name">
-#             <a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
-#           </td>
-#           <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
-#           <td colspan="2"></td>
-#           {% } %}
-#         <td class="delete">
-#           <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
-#             <i class="icon-trash icon-white"></i>
-#             <span>{%=locale.fileupload.destroy%}</span>
-#           </button>
-#           <input type="checkbox" name="delete" value="1">
-#         </td>
-#       </tr>
-#       {% } %}
-#   </script>


:javascript

  $(document).ready(function() {

    $('.new-directory').on('click', function(e) {
      e.preventDefault();

      var retval = prompt('folder name?');
      console.log(retval);
      if (retval) {
        var parentDirId = $('.files').data('cwd-id');

        $.ajax({
          url: '#{filemanager_files_path}',
          type: 'post',
          data: {filemanager_file: { name: retval, parent_id: parentDirId } },
          dataType: 'json',
          success: function() {
            console.log('success');
            reloadFiles();
          },
        });
      }
    });

    $('#fileupload').fileupload({

      filesContainer: $('.files'),
      uploadTemplateId: null,
      downloadTemplateId: null,

      uploadTemplate: function(o) {
        var items = $();
        $.each(o.files, function(index, file) {
          console.log(index);
          console.log(file);
          var item = $('<div class="file" id="' + file.unique_id + '">' +
            '<div class="preview-image glyphicon glyphicon-file"></div>' +
            '<div class="caption">' +
              '<p>' + file.name + '</p>' +
            '</div>' +
            '<div class="progress-bar-box">' +
              '<div id="progress-bar-'+file.name+'" class="progress">' +
                '<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%;">'+
                  '0%' +
                '</div>' +
              '</div>' +
            '</div>' +
          '</div>');

          items = items.add(item);
        });
        return items;
      },

      downloadTemplate: function(o) {
        var items = $();
        $.each(o.files, function(index, file) {
          console.log(index);
          console.log(file);
          var imgClass = file.directory ? 'glyphicon-folder-close' : 'glyphicon-file';
          var dirClass = file.directory ? 'directory' : '';
          var urlDisplay = '';
          if (!file.directory) {
            urlDisplay = '<div class="input-group direct-link">' +
              '<input type="text" id="direct-file-link-'+file.id+'" class="form-control" readonly="readonly" value="'+file.url+'"/>'+
              '<span class="input-group-btn">' +
                '<button class="btn zeroclip-button" data-clipboard-target="direct-file-link-' + file.id + '" data-default-clipboard-text="' + file.url + '" title="Copy link to clipboard" >' +
                  '<span class="glyphicon glyphicon-floppy-open"></span>' +
                '</button>' +
              '</span>' +
            '</div>';
          }
          var item = $('<div class="file ' + dirClass + '" ' +
            'data-id="' + file.id + '"' +
            'data-file-url="' + file.url + '">' +
            '<div class="clickable menu-active-area">' +
              '<div class="preview-image glyphicon ' + imgClass + '"></div>' +
              '<div class="caption">' +
                '<p>' + file.name + '</p>' +
              '</div>' +
            '</div>' +
            urlDisplay +
            '<a rel="nofollow" href="#{filemanager_files_path}/'+file.id+'"  data-confirmation-text="Jeste li sigurni da Å¾elite izbrisati ' +
              file.name + 
              '?" class="remove-file btn-xs destroy-button">' +
            '</a>' +
          '</div>');

          item.data('file', file);

          items = items.add(item);
        });

        return items;
      },
    });


    $('#fileupload')
      // .bind('fileuploadsend', function(e, data) {
      //   $.ajax({
      //     url: '/cd/private/file_manager/storage_free',
      //     dataType: 'json',
      //       
      //     success: function(data, status, xhr) {
      //       if (data.storage_free > 
      //     },
      //   });
      // })
      .bind('fileuploadadd', function(e, data) {
        console.log(e);
        console.log(data);
        data.parent_id = $('.files').data('cwd-id');
        data.files.forEach(function(f){f.unique_id = 'div-' + Date.now();});
        console.log(data);
        data.submit();
      })
      .bind('fileuploaddone', function(e, data) {
        console.log(e);
        console.log(data);
        reloadFiles();
      })
      .bind('fileuploadfail', function(e, data) {
        if (data.jqXHR) {
          var response = data.jqXHR.responseJSON;
          response.errors.forEach(function(error) {
            alert(error);
          });
        }
        reloadFiles();
      })
      .on('fileuploadprogress', function(e, data) {
        var fileid = data.files[0].unique_id;
        var progress = parseInt(data.loaded / data.total * 100, 10);
        if (progress > 100) progress = 100;

        var progressBar = $('#'+fileid).find('.progress-bar');

        progressBar.css('width', '' + progress + '%');
        progressBar.html('' + progress + '%');
      });

    // Load existing files:
    window.reloadFiles = function() {
      $.getJSON($('#fileupload').prop('action') + '?dir_id=' + $('.files').data('cwd-id'), function (response) {
        files = response.files;
        $('.cwd-name').text(response.directory_name);
        var fu = $('#fileupload').data('blueimpFileupload'), template;
        fu._adjustMaxNumberOfFiles(-files.length);
        console.log(files);
        template = fu._renderDownload(files)
        $('#fileupload .files').html(template);
        // Force reflow:
        fu._reflow = fu._transition && template.length &&
          template[0].offsetWidth;
        template.addClass('in');
        $('#loading').remove();

        fileManager.vivifyFiles();
        //$('.direct-link').hide();
      });
    };

    reloadFiles();

    fileManager.initialize();
  });
